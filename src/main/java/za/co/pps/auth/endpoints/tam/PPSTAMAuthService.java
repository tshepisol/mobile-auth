
package za.co.pps.auth.endpoints.tam;

import za.co.pps.auth.util.Config;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PPS_TAMAuth_Service",
        //wsdlLocation = "https://dr-qaweb-01.ppsdmn.co.za:444/SecurityService/PPS_TAMAuth_Service/services/PPS_TAMAuth_ServicePort/wsdl/PPS_TAMAuth_Service.wsdl",
        targetNamespace = "http://PPS.co.za/PPS_TAMAuth_Service/")
public class PPSTAMAuthService
    extends Service
{

    private final static URL PPSTAMAUTHSERVICE_WSDL_LOCATION;
    private final static WebServiceException PPSTAMAUTHSERVICE_EXCEPTION;
    private final static QName PPSTAMAUTHSERVICE_QNAME = new QName("http://PPS.co.za/PPS_TAMAuth_Service/", "PPS_TAMAuth_Service");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(Config.getTAMWSDL());
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PPSTAMAUTHSERVICE_WSDL_LOCATION = url;
        PPSTAMAUTHSERVICE_EXCEPTION = e;
    }

    public PPSTAMAuthService() {
        super(__getWsdlLocation(), PPSTAMAUTHSERVICE_QNAME);
    }

    public PPSTAMAuthService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PPSTAMAUTHSERVICE_QNAME, features);
    }

    public PPSTAMAuthService(URL wsdlLocation) {
        super(wsdlLocation, PPSTAMAUTHSERVICE_QNAME);
    }

    public PPSTAMAuthService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PPSTAMAUTHSERVICE_QNAME, features);
    }

    public PPSTAMAuthService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PPSTAMAuthService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PPSTAMAuthServicePort
     */
    @WebEndpoint(name = "PPS_TAMAuth_ServicePort")
    public PPSTAMAuthServicePort getPPSTAMAuthServicePort() {
        return super.getPort(new QName("http://PPS.co.za/PPS_TAMAuth_Service/", "PPS_TAMAuth_ServicePort"), PPSTAMAuthServicePort.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PPSTAMAuthServicePort
     */
    @WebEndpoint(name = "PPS_TAMAuth_ServicePort")
    public PPSTAMAuthServicePort getPPSTAMAuthServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://PPS.co.za/PPS_TAMAuth_Service/", "PPS_TAMAuth_ServicePort"), PPSTAMAuthServicePort.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PPSTAMAUTHSERVICE_EXCEPTION!= null) {
            throw PPSTAMAUTHSERVICE_EXCEPTION;
        }
        return PPSTAMAUTHSERVICE_WSDL_LOCATION;
    }

}
